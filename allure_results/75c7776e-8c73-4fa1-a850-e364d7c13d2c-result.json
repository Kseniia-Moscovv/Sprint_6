{"name": "Order creation test", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001046c44dc chromedriver + 4162780\n1   chromedriver                        0x00000001046bc664 chromedriver + 4130404\n2   chromedriver                        0x0000000104313bc0 chromedriver + 293824\n3   chromedriver                        0x000000010435a040 chromedriver + 581696\n4   chromedriver                        0x0000000104399ab0 chromedriver + 842416\n5   chromedriver                        0x000000010434d6bc chromedriver + 530108\n6   chromedriver                        0x000000010434e930 chromedriver + 534832\n7   chromedriver                        0x0000000104689e08 chromedriver + 3923464\n8   chromedriver                        0x000000010468e3dc chromedriver + 3941340\n9   chromedriver                        0x0000000104672038 chromedriver + 3825720\n10  chromedriver                        0x000000010468ef3c chromedriver + 3944252\n11  chromedriver                        0x00000001046646f4 chromedriver + 3770100\n12  chromedriver                        0x00000001046ab980 chromedriver + 4061568\n13  chromedriver                        0x00000001046abaf8 chromedriver + 4061944\n14  chromedriver                        0x00000001046bc2e4 chromedriver + 4129508\n15  libsystem_pthread.dylib             0x00000001af7d206c _pthread_start + 148\n16  libsystem_pthread.dylib             0x00000001af7cce2c thread_start + 8", "trace": "self = <test_create_order.TestCreateOrder object at 0x102262ed0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e9d96c25bf27680d6c4dc9433e109f3d\")>, name = 'Кевин', surname = 'Сэр', address = 'Нью-Йорк'\nmetro_station = '0', phone = '79999999999', delivery_date = '30.01.2024', rent_time = 'сутки', scooter_colour = 'black', comment = 'Банана!'\n\n    @allure.title('Order creation test')\n    @allure.description('Проверка создания заказа с разными наборами данных с помощью параметризации')\n    @pytest.mark.parametrize('name, surname, address, metro_station, phone, delivery_date, rent_time, scooter_colour, comment', OrderPageConstants.CLIENT_DATA)\n    def test_check_to_create_order(self, driver, name, surname, address, metro_station, phone, delivery_date, rent_time, scooter_colour, comment):\n        main_page = MainPageYaScooter(driver)\n        order_page = OrderPageYaScooter(driver)\n        main_page.click_on_header_order_button()\n        order_page.wait_to_order_page_title_into_view()\n        order_page.fill_in_client_form(name, surname, address, metro_station, phone)\n        order_page.fill_in_rent_form(delivery_date, rent_time, scooter_colour, comment)\n>       order_page.approve_order()\n\ntests/test_create_order.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/order_page.py:102: in approve_order\n    self.wait_to_approved_order_modal()\npages/order_page.py:78: in wait_to_approved_order_modal\n    WebDriverWait(self.driver, 3).until(EC.visibility_of_element_located(OrderPageYaScooterLocators.approved_order_modal))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e9d96c25bf27680d6c4dc9433e109f3d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x1028e1760>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001046c44dc chromedriver + 4162780\nE       1   chromedriver                        0x00000001046bc664 chromedriver + 4130404\nE       2   chromedriver                        0x0000000104313bc0 chromedriver + 293824\nE       3   chromedriver                        0x000000010435a040 chromedriver + 581696\nE       4   chromedriver                        0x0000000104399ab0 chromedriver + 842416\nE       5   chromedriver                        0x000000010434d6bc chromedriver + 530108\nE       6   chromedriver                        0x000000010434e930 chromedriver + 534832\nE       7   chromedriver                        0x0000000104689e08 chromedriver + 3923464\nE       8   chromedriver                        0x000000010468e3dc chromedriver + 3941340\nE       9   chromedriver                        0x0000000104672038 chromedriver + 3825720\nE       10  chromedriver                        0x000000010468ef3c chromedriver + 3944252\nE       11  chromedriver                        0x00000001046646f4 chromedriver + 3770100\nE       12  chromedriver                        0x00000001046ab980 chromedriver + 4061568\nE       13  chromedriver                        0x00000001046abaf8 chromedriver + 4061944\nE       14  chromedriver                        0x00000001046bc2e4 chromedriver + 4129508\nE       15  libsystem_pthread.dylib             0x00000001af7d206c _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x00000001af7cce2c thread_start + 8\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "description": "Проверка создания заказа с разными наборами данных с помощью параметризации", "parameters": [{"name": "name", "value": "'Кевин'"}, {"name": "surname", "value": "'Сэр'"}, {"name": "address", "value": "'Нью-Йорк'"}, {"name": "metro_station", "value": "'0'"}, {"name": "phone", "value": "'79999999999'"}, {"name": "delivery_date", "value": "'30.01.2024'"}, {"name": "rent_time", "value": "'сутки'"}, {"name": "scooter_colour", "value": "'black'"}, {"name": "comment", "value": "'Банана!'"}], "start": 1705768887970, "stop": 1705768891596, "uuid": "c63c6558-c339-45dd-aab5-dc7793d0bbc6", "historyId": "ebe22689fed6728e6b6ed8a05cce40cf", "testCaseId": "60490a0196568300a7b93f3c7c4085e8", "fullName": "tests.test_create_order.TestCreateOrder#test_check_to_create_order", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "Air-Uchiru-5.lan"}, {"name": "thread", "value": "10836-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}